#+Title: Population Project
#+Author: Ethan Ligon
#+EPRESENT_FRAME_LEVEL: 3
#+OPTIONS: toc:nil pri:t

The idea of this project is to collect and
make accessible data on the human
population.

* Deliverables
   - A :: These deliverables are
          /required/.  Note that other
          deliverables may rely on
          completion of A deliverables.
   - B :: These deliverables are /very
          desirable/.
   - C :: These deliverables would be
          /nice to have/.

** [#A] Population Statistics
   A =python= function named =population=
   that will deliver information to
   answer the queries of the following
   form:
   #+BEGIN_QUOTE
   In [year] how many
   [people/males/females] aged [low] to
   [high] were living in [the
   world/region/country]?
   #+END_QUOTE

*** Unit test
   #+begin_src python
   assert population(year=2000,sex='Male',age_range=(0,100),place='WLD') > 7e9
   #+end_src

** [#A] Population DataFrames
 
   A function that returns a =pandas= DataFrame
   indexed by Region or Country and Year, with
   columns giving counts of people in different
   age-sex groups.
  
** [#B] Population Pyramids

   A =python= function that takes as
   input a =pandas= DataFrame with
   columns providing counts of people by
   age-sex groups, and constructs a
   "population pyramid" graph for
   visualizing the data.

** [#C] Animated Population Pyramids

   A =python= function that takes as
   input a =pandas= DataFrame with
   columns providing counts of people by
   age-sex groups, with rows
   corresponding to different years, and
   constructs an animated "population
   pyramid" graph for visualizing how the
   population changes over time.

** [#C] Population Maps

   A Jupyter notebook which queries a
   population database and provides
   visualizations in the form of maps.
   An example of a library that may be
   useful is [[https://geopandas.org][geopandas]].

** [#C] Other Visualization Tools

   If you think of other ways to organize
   or visualize population and how it
   changes over time, this is for you!

** [#C] Agricultural Supply
   Relate changes in agricultural food supply 
   to changes in population. 

   What would Malthus think?

** [#A] Presentation

   Each group will be responsible for
   creating a 15 minute video demonstration of
   the work they've accomplished during
   the sprint.
   
   Note that you will be evaluated on how 
   well your team managed its time during 
   the presentation, so try not to go over 
   15 minutes. Also note that groups 
   typically discuss or run through their 
   code in some way during presentations.

** [#A] GitHub Repository containing code

   Create a GitHub repository with your 
   code and any files necessary to run your 
   code. See =piazza= post for GitHub resources.

** [#A] Code Review

   We will be randomly assigning each group 
   to review TWO other groups' code. For the 
   code review, each group should have their 
   code (at least a "rough draft" of their 
   code) ready on February 9th, so that code 
   reviews can be completed by February 11th.

* Knowledge
  - Grasp of tools to visualize population 
    dynamics;
  - Broad understanding of composition
    of human population;
  - Grasp of agricultural productivity measurement.

* Skills
  :PROPERTIES:
  :ID:       2bd922a9-1fb6-47ff-82fa-894684290600
  :END:

** [#A] Jupyter Notebooks
   Basic manipulations of Jupyter notebooks
   on https://datahub.berkeley.edu

** [#A] Use of Indicators API from =python=
   Use the [[https://datahelpdesk.worldbank.org/knowledgebase/articles/889392-about-the-indicators-api-documentation][Indicators API]] to query the
   on-line World Development Indicators
   database.

** [#A] Build =pandas.DataFrame=
   Collect data on population into a
   [[https://pandas.pydata.org][=pandas=]] DataFrame.

** [#B] Read on-line spreadsheets using =python=
** [#B] Construct plots in =python=
   Using =matplotlib=, =plotly=, or similar.
** [#C] Construct world maps 
   Consider using =plotly=, =geopandas=, or similar.
** [#C] Devise other visualizations
